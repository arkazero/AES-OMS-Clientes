<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2014-2017, Red Hat, Inc. and/or its affiliates, and individual 
	contributors by the @authors tag. Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<!-- Configures the Camel Context -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="           http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans.xsd           http://camel.apache.org/schema/spring    http://camel.apache.org/schema/spring/camel-spring.xsd   http://camel.apache.org/schema/cxf    http://camel.apache.org/schema/cxf/camel-cxf.xsd        http://cxf.apache.org/transports/http/configuration    http://cxf.apache.org/schemas/configuration/http-conf.xsd   ">
    <import resource="properties-beans.xml"/>
    <!-- EndPoint Rest conf -->
    <cxf:rsServer address="${cxf.server}/Clientes" id="rsServer" serviceClass="com.clientes.rs.RSClientesImpl">
        <cxf:extensionMappings>
            <entry key="json" value="application/json"/>
        </cxf:extensionMappings>
        <cxf:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
    </cxf:rsServer>
    <bean class="com.clientes.rs.RSClientesImpl" id="itemServiceBean"/>
    <!-- Logging conf -->
    <bean class="org.slf4j.LoggerFactory" factory-method="getLogger" id="contableLog">
        <constructor-arg type="java.lang.String" value="com.ordenes.rs"/>
    </bean>
    <bean class="org.apache.camel.builder.LoggingErrorHandlerBuilder " id="loggingErrorHandler">
        <property name="logName" value="mylogger.name"/>
        <property name="level" value="DEBUG"/>
    </bean>
    <camelContext id="_rs_ordenes" trace="false" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="properties" location="ref:confProps"/>
        <dataFormats>
            <json id="jack" library="Jackson"/>
        </dataFormats>
        <route id="_route_ordenes" streamCache="true" trace="false">
            <!-- 
            <removeHeaders id="_removeHeaders1" pattern="CamelHttp*"/>
            <log id="_log1" message="INGRESA RUTA HW"/>
            <setHeader headerName="CamelVelocityResourceUri" id="_setHeader2">
                <simple>templates/buscarIdentificacion.vm</simple>
            </setHeader>
            <to id="_to2" uri="velocity:dummy?loaderCache=false">
                <description>Get xml request from template velocity</description>
            </to>
            <log id="_log2" message="::: Request VM: ${body}"/>
            
            <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
            <setBody id="_setBody1">
                <xpath>//*[local-name()='Body']/node()</xpath>
            </setBody>
             -->
            <from id="_from1" uri="cxfrs:bean:rsServer?bindingStyle=Default"/>
            <bean id="_bean1" method="buscarIdentificacion" ref="itemServiceBean"/>
            <log id="_logHeader" message="Headers :::: ${header.operationName}"/>
            <log id="_logHeader" message="Headers :::: ${header.id}"/>
            <log id="_logBody" message="Body :::: ${body}"/>
            <unmarshal id="_unmarshal1">
                <jaxb contextPath="co.com.touresbalon.service" prettyPrint="true"/>
            </unmarshal>
            <log id="_logBody" message="Body :::: ${body.identificacion}"/>
            
            <setHeader headerName="req" id="_setHeader5">
                <simple>${body}</simple>
            </setHeader>
            <setHeader headerName="CamelVelocityResourceUri" id="_setHeader6">
                <simple>templates/buscarIdentificacion.vm</simple>
            </setHeader>
            <to id="_to2" uri="velocity:dummy?loaderCache=false">
                <description>Get xml request from template velocity</description>
            </to>
            <log id="_log2" message="Mensaje en Velocity :::: ${body}"/>
            <!-- 
            <setHeader headerName="SOAPAction" id="_setHeader7">
                <constant>"http://service.touresbalon.com.co"</constant>
            </setHeader>
            <setHeader headerName="operationName" id="_setHeader8">
                <constant>consultarClientePorIdentificacion</constant>
            </setHeader>
            <setHeader headerName="operationNamespace" id="_setHeader9">
                <constant/>
            </setHeader>
            <log id="_log1" loggerRef="bookingLog" message="::: Request VM: ${body}"/>
            <setHeader headerName="Content-Type" id="_setHeader10">
                <constant>application/soap+xml;charset=utf-8</constant>
            </setHeader>
            <setHeader headerName="CamelHttpMethod" id="_setHeader11">
                <constant>POST</constant>
            </setHeader>
            <setHeader headerName="Host" id="_setHeader12">
                <constant>"http://18.217.208.15:38080/omsJboss/ServicioClientes/ClientesService"</constant>
            </setHeader>
            <removeHeaders id="_removeHeaders1" pattern="req"/>
            <to id="_to3" uri="https4://18.217.208.15:38080/omsJboss/ServicioClientes/ClientesService?bridgeEndpoint=true&amp;sslContextParametersRef=sslContextParameters"/>
            <setBody id="_setBody1">
                <xpath logNamespaces="true" trim="true">//SOAP-ENV:Body/node()</xpath>
            </setBody>
			<log id="_log1" loggerRef="bookingLog" message="::: Request VM: ${body}"/>
			-->
        </route>
    </camelContext>
</beans>
